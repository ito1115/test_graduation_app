<div class="container">
  <div class="header">
    <h1>Add New Book</h1>
    <%= link_to "Back to Books", books_path, class: "btn btn-secondary" %>
  </div>

  <%= form_with model: @book, local: true, class: "book-form" do |form| %>
    <% if @book.errors.any? %>
      <div class="error-messages">
        <h3><%= pluralize(@book.errors.count, "error") %> prohibited this book from being saved:</h3>
        <ul>
          <% @book.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <!-- Google Books隠しフィールド -->
    <% if @book.google_books_id.present? %>
      <%= form.hidden_field :google_books_id %>
      <%= form.hidden_field :title %>
      <%= form.hidden_field :author %>
      <%= form.hidden_field :publisher %>
      <%= form.hidden_field :published_date %>
      <%= form.hidden_field :description %>
      <%= form.hidden_field :isbn_10 %>
      <%= form.hidden_field :isbn_13 %>
      <%= form.hidden_field :image_url %>
      
      <!-- Google Books情報を表示 -->
      <div class="google-books-info">
        <h3>本の情報（Google Booksより）</h3>
        <div class="book-preview">
          <% if @book.image_url.present? %>
            <img src="<%= @book.image_url %>" alt="<%= @book.title %>" class="book-cover-preview">
          <% end %>
          <div class="book-details">
            <p><strong>タイトル:</strong> <%= @book.title %></p>
            <% if @book.author.present? %>
              <p><strong>著者:</strong> <%= @book.author %></p>
            <% end %>
            <% if @book.publisher.present? %>
              <p><strong>出版社:</strong> <%= @book.publisher %></p>
            <% end %>
            <% if @book.published_date.present? %>
              <p><strong>出版日:</strong> <%= @book.published_date %></p>
            <% end %>
          </div>
        </div>
      </div>
    <% else %>
      <!-- Google Books情報がない場合はタイトル入力フィールドを表示 -->
      <div class="form-group">
        <%= form.label :title, class: "form-label required" %>
        <%= form.text_field :title, class: "form-control", placeholder: "Enter book title", required: true %>
      </div>
    <% end %>

    <div class="form-group">
      <%= form.label :purchase_reason, "購入理由", class: "form-label required" %>
      <div class="ai-suggestion-container" id="aiSuggestionContainer" style="display: none;">
        <div class="ai-suggestion-header">
          <span class="ai-icon">🤔</span>
          <span class="ai-label">もしかしたら...</span>
        </div>
        <div class="ai-suggestion-text" id="aiSuggestionText"></div>
        <div class="ai-suggestion-buttons">
          <button type="button" class="btn-use-suggestion" id="useSuggestionBtn">この理由を使う</button>
          <button type="button" class="btn-retry-suggestion" id="retrySuggestionBtn">別の理由にする</button>
        </div>
      </div>
      <%= form.text_area :purchase_reason, class: "form-control", rows: 3, placeholder: "なぜこの本を購入しましたか？", required: true, id: "purchase_reason_field" %>
      <div class="ai-button-container">
        <button type="button" class="btn-ai-suggest" id="aiSuggestBtn">
          ✨ AIに提案してもらう
        </button>
        <div class="ai-loading" id="aiLoading" style="display: none;">
          <span class="spinner"></span> AIが考え中...
        </div>
      </div>
      <small class="form-text">例: 仕事のスキルアップのため、趣味で読みたい、友人に勧められた など</small>
    </div>

    <div class="form-group">
      <%= form.label :purchase_date, "購入日", class: "form-label required" %>
      <%= form.date_field :purchase_date, class: "form-control", required: true, value: Date.current %>
      <small class="form-text">本を購入した日（予定日も含む）</small>
    </div>

    <div class="form-group">
      <div class="radio-group">
        <%= form.radio_button :reading_status, 'wish', checked: (@book.reading_status || 'wish') == 'wish', class: "radio-input" %>
        <%= form.label :reading_status_wish, '読みたい', class: "radio-label" %>
        
        <%= form.radio_button :reading_status, 'tsundoku', class: "radio-input" %>
        <%= form.label :reading_status_tsundoku, '積読', class: "radio-label" %>
        
        <%= form.radio_button :reading_status, 'completed', class: "radio-input" %>
        <%= form.label :reading_status_completed, '読了', class: "radio-label" %>
      </div>
      <small class="form-text">現在の読書状況を選択してください</small>
    </div>

    <div class="form-actions">
      <%= form.submit "Create Book", class: "btn btn-primary" %>
      <%= link_to "Cancel", books_path, class: "btn btn-secondary" %>
    </div>
  <% end %>
</div>

<style>
.container {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

.google-books-info {
  background: #f8f9fa;
  border: 1px solid #dee2e6;
  border-radius: 8px;
  padding: 20px;
  margin-bottom: 25px;
}

.google-books-info h3 {
  margin: 0 0 15px 0;
  color: #495057;
  font-size: 18px;
}

.book-preview {
  display: flex;
  gap: 15px;
  align-items: flex-start;
}

.book-cover-preview {
  width: 80px;
  height: 120px;
  object-fit: cover;
  border-radius: 5px;
  border: 1px solid #ddd;
  flex-shrink: 0;
}

.book-details {
  flex: 1;
}

.book-details p {
  margin: 8px 0;
  font-size: 14px;
  color: #495057;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 30px;
  padding-bottom: 20px;
  border-bottom: 2px solid #eee;
}

.header h1 {
  margin: 0;
  color: #333;
}

.book-form {
  background: white;
  padding: 30px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.error-messages {
  background: #f8d7da;
  color: #721c24;
  padding: 15px;
  border-radius: 5px;
  margin-bottom: 25px;
  border: 1px solid #f5c6cb;
}

.error-messages h3 {
  margin: 0 0 10px 0;
  font-size: 16px;
}

.error-messages ul {
  margin: 0;
  padding-left: 20px;
}

.form-group {
  margin-bottom: 20px;
}

.form-row {
  display: flex;
  gap: 15px;
  margin-bottom: 20px;
}

.form-group.half {
  flex: 1;
  margin-bottom: 0;
}

.form-label {
  display: block;
  font-weight: bold;
  margin-bottom: 5px;
  color: #333;
}

.form-label.required::after {
  content: " *";
  color: #dc3545;
}

.form-control {
  width: 100%;
  padding: 10px;
  border: 2px solid #ddd;
  border-radius: 5px;
  font-size: 14px;
  transition: border-color 0.3s;
}

.form-control:focus {
  border-color: #007bff;
  outline: none;
  box-shadow: 0 0 0 3px rgba(0,123,255,0.1);
}

.form-text {
  display: block;
  margin-top: 5px;
  color: #6c757d;
  font-size: 12px;
}

textarea.form-control {
  resize: vertical;
  min-height: 100px;
}

.radio-group {
  display: flex;
  gap: 20px;
  align-items: center;
  margin-bottom: 10px;
}

.radio-input {
  margin-right: 8px;
}

.radio-label {
  margin-right: 15px;
  font-weight: normal;
  cursor: pointer;
  display: flex;
  align-items: center;
}

.form-actions {
  margin-top: 30px;
  display: flex;
  gap: 15px;
  padding-top: 20px;
  border-top: 1px solid #eee;
}

.btn {
  padding: 12px 24px;
  text-decoration: none;
  border-radius: 5px;
  display: inline-block;
  border: none;
  cursor: pointer;
  font-size: 14px;
  font-weight: bold;
  text-align: center;
  transition: all 0.3s;
}

.btn-primary {
  background-color: #007bff;
  color: white;
}

.btn-secondary {
  background-color: #6c757d;
  color: white;
}

.btn:hover {
  opacity: 0.9;
  transform: translateY(-1px);
}

@media (max-width: 768px) {
  .header {
    flex-direction: column;
    gap: 15px;
    align-items: flex-start;
  }
  
  .book-form {
    padding: 20px;
  }
  
  .form-row {
    flex-direction: column;
    gap: 0;
  }
  
  .form-group.half {
    margin-bottom: 20px;
  }

  .form-actions {
    flex-direction: column;
  }
}

/* AI提案機能のスタイル */
.ai-suggestion-container {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 12px;
  padding: 20px;
  margin-bottom: 15px;
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
  animation: fadeIn 0.5s ease-in;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.ai-suggestion-header {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 12px;
}

.ai-icon {
  font-size: 24px;
}

.ai-label {
  color: white;
  font-weight: bold;
  font-size: 16px;
}

.ai-suggestion-text {
  background: rgba(255, 255, 255, 0.95);
  padding: 15px;
  border-radius: 8px;
  color: #333;
  font-size: 15px;
  line-height: 1.6;
  margin-bottom: 12px;
}

.ai-suggestion-buttons {
  display: flex;
  gap: 10px;
}

.btn-use-suggestion {
  background: white;
  color: #667eea;
  border: none;
  padding: 10px 20px;
  border-radius: 6px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s;
  font-size: 14px;
  flex: 1;
}

.btn-use-suggestion:hover {
  background: #f0f0f0;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.btn-retry-suggestion {
  background: rgba(255, 255, 255, 0.3);
  color: white;
  border: 2px solid white;
  padding: 10px 20px;
  border-radius: 6px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s;
  font-size: 14px;
  flex: 1;
}

.btn-retry-suggestion:hover {
  background: rgba(255, 255, 255, 0.5);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.ai-button-container {
  margin-top: 10px;
  display: flex;
  align-items: center;
  gap: 15px;
}

.btn-ai-suggest {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s;
  font-size: 14px;
  box-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);
}

.btn-ai-suggest:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.5);
}

.ai-loading {
  display: flex;
  align-items: center;
  gap: 10px;
  color: #667eea;
  font-weight: bold;
}

.spinner {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 3px solid rgba(102, 126, 234, 0.3);
  border-top-color: #667eea;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOMContentLoaded fired');

  const aiSuggestBtn = document.getElementById('aiSuggestBtn');
  const aiLoading = document.getElementById('aiLoading');
  const aiSuggestionContainer = document.getElementById('aiSuggestionContainer');
  const aiSuggestionText = document.getElementById('aiSuggestionText');
  const useSuggestionBtn = document.getElementById('useSuggestionBtn');
  const retrySuggestionBtn = document.getElementById('retrySuggestionBtn');
  const purchaseReasonField = document.getElementById('purchase_reason_field');

  console.log('Elements found:', {
    aiSuggestBtn: !!aiSuggestBtn,
    aiLoading: !!aiLoading,
    aiSuggestionContainer: !!aiSuggestionContainer,
    aiSuggestionText: !!aiSuggestionText,
    useSuggestionBtn: !!useSuggestionBtn,
    retrySuggestionBtn: !!retrySuggestionBtn,
    purchaseReasonField: !!purchaseReasonField
  });

  if (!aiSuggestBtn) {
    console.error('aiSuggestBtn not found!');
    return;
  }

  // 本の情報を取得する関数
  function getBookInfo() {
    // Google Booksから来た場合は隠しフィールドから取得
    const googleBooksId = document.querySelector('input[name="book[google_books_id]"]');
    if (googleBooksId && googleBooksId.value) {
      return {
        title: document.querySelector('input[name="book[title]"]')?.value || '',
        author: document.querySelector('input[name="book[author]"]')?.value || '',
        description: document.querySelector('input[name="book[description]"]')?.value || ''
      };
    }

    // 通常の入力フォームから取得
    const titleField = document.querySelector('input[name="book[title]"]');
    return {
      title: titleField?.value || '',
      author: '',
      description: ''
    };
  }

  // CSRFトークンを取得
  function getCSRFToken() {
    return document.querySelector('meta[name="csrf-token"]')?.content || '';
  }

  // AIに提案してもらうボタンのクリックイベント
  aiSuggestBtn.addEventListener('click', async function(e) {
    console.log('AI Suggest button clicked!');
    e.preventDefault(); // フォーム送信を防ぐ
    await requestAISuggestion();
  });

  // AIに提案を再度リクエストする共通関数
  async function requestAISuggestion() {
    const bookInfo = getBookInfo();

    // タイトルが入力されていない場合
    if (!bookInfo.title || bookInfo.title.trim() === '') {
      alert('本のタイトルを入力してください');
      return;
    }

    // ローディング表示
    aiSuggestBtn.style.display = 'none';
    aiLoading.style.display = 'flex';
    aiSuggestionContainer.style.display = 'none';

    try {
      const response = await fetch('/books/predict_purchase_reason', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': getCSRFToken()
        },
        body: JSON.stringify({
          title: bookInfo.title,
          author: bookInfo.author,
          description: bookInfo.description
        })
      });

      const data = await response.json();

      if (data.success && data.reason) {
        // AI提案を表示
        aiSuggestionText.textContent = data.reason;
        aiSuggestionContainer.style.display = 'block';
      } else {
        alert('AI推測に失敗しました: ' + (data.error || '不明なエラー'));
      }
    } catch (error) {
      console.error('Error:', error);
      alert('AI推測中にエラーが発生しました');
    } finally {
      // ローディング非表示、ボタン再表示
      aiLoading.style.display = 'none';
      aiSuggestBtn.style.display = 'block';
    }
  }

  // 「この理由を使う」ボタンのクリックイベント
  useSuggestionBtn.addEventListener('click', function() {
    const suggestedReason = aiSuggestionText.textContent;
    purchaseReasonField.value = suggestedReason;
    aiSuggestionContainer.style.display = 'none';
  });

  // 「別の理由にする」ボタンのクリックイベント
  retrySuggestionBtn.addEventListener('click', async function(e) {
    e.preventDefault();
    await requestAISuggestion();
  });
});
</script>